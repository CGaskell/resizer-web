uservoice:true

# SQLReader plugin

Allows you to access binary blobs in a SQL database using a URL. Accepts integer, GUID, and string identifiers for images. 

### Example Urls

* http://mysite.com/databaseimages/38.jpg
* http://mysite.com/databaseimages/21EC2020-3AEA-1069-A2DD-08002B30309D.jpg
* http://mysite.com/databaseimages/flower32.jpg

See Samples/SqlReaderSample/ in the download for a comprehensive sample project, complete with uploading, listing, and processing.

### Features

* Can serve non-image data if desired
* Compatible with CloudFront and DiskCache
* Supports modified-date comparison between SQL and the filesystem so updated versions of cached files are detected.
* Easy to configure.


## Installation

Either run `Install-Package ImageResizer.Plugins.SqlReader` in the NuGet package manager, or:

1. Add a reference to ImageResizer.Plugins.SqlReader to your project.

After adding the reference or using NuGet, you'll need to configure the plugin via code.

### Example

	 public class Global : System.Web.HttpApplication
	 {
	     protected void Application_Start(object sender, EventArgs e)
	     {
	         //Configure Sql Backend
	         SqlReaderSettings s = new SqlReaderSettings();
	         s.ConnectionString = ConfigurationManager.ConnectionStrings["database"].ConnectionString;
	         s.PathPrefix = "~/databaseimages";
	         s.ImageIdType = System.Data.SqlDbType.UniqueIdentifier;
	         s.ImageBlobQuery = "SELECT Content FROM Images WHERE ImageID=@id";
	         s.ModifiedDateQuery = "Select ModifiedDate, CreatedDate From Images WHERE ImageID=@id";
	         s.ImageExistsQuery = "Select COUNT(ImageID) From Images WHERE ImageID=@id";

	         //Add plugin
	         new SqlReaderPlugin(s).Install(Config.Current);

	     }
	}
	
### Supported key types

Built-in support is included for the following kinds of keys in the URL.

* Int
* Guid
* TinyInt
* SmallInt
* BigInt
* VarChar
* NVarChar
* NChar
* Char


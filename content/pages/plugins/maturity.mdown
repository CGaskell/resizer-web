
# Maturity chart

Last updated Aug 13, 2011 regarding V3.0.12

This chart represents the author's honest opinion on the maturity of the various plugins.

* *alpha* - There may be API changes coming, and these have a higher likelihood of bugs.
* *beta* - Significant testing has occurred, unlikely to undergo big changes or have severe bugs.
* *stable* - Extremely well tested, reliable, and API changes would be unlikely.

Note that my 'beta' equals most people's idea of 'stable'.

## Core 

* Core framework - *beta* (likely to have API refinements, but otherwise very stable)
* DefaultEncoder - *stable*
* NoCache - *stable*
* Diagnostics - *beta*
* ClientCache - *stable*
* SizeLimiting - *stable*
* DropShadow - *stable* 
* Gradient - *alpha*
* Image404 -  *beta*
* VirtualFolder - *beta*
* ImageHandlerSyntax - *alpha*
* FolderResizeSyntax - *beta*
* MvcRoutingShim - *alpha*

## Performance Bundle

* PrettyGifs - *stable*
* AnimatedGifs - *stable*
* DiskCache - *stable*/*beta* (Stable with default settings, beta with autoClean=True)


## Designer Bundle


* PsdReader - *beta*
* Watermark - *alpha* (Backwards-incompatible changes may be coming, looking for feedback)
* AdvancedFilters - *alpha*
* SimpleFilters - *alpha* (Querystring API will be changing soon to allow filters to be combined)
* SeamCarving - *alpha* 
* WhitespaceTrimmer - *alpha*

## Cloud Bundle


* S3Reader - *stable* (used by a large social networking site)
* SQLReader - *stable* 
* CloudFront - *stable* (Will have new API additions soon, but no breaking changes are expected)
* RemoteReader - *alpha*
* AzureReader - *alpha*

<script type="text/javascript">
//<!--

if (loadq === undefined) var loadq = [];
loadq.push(function(){
	$("em:contains('alpha')").addClass('alpha');
	$("em:contains('beta')").addClass('beta');
	$("em:contains('stable')").addClass('stable');
});
//-->
</script>

<style type="text/css">
em.alpha{color:red;}
em.stable{color:green;}
em.beta{color:#333;}
</style>
# Troubleshooting guide

The image resizer is self-diagnosing for the majority of issues. Visit `/resizer.debug.ashx` on your website to check for any issues, and to verify that you are using the latest version of all the ImageResizer dlls. If `/resizer.debug.ashx` is not available, you can check the version of the dlls by right-clicking on each and choosing "Properties".

To get support or use this guide, [make sure you get the detailed error message from visiting the image URL directly](/docs/geterror). This guide cannot offer a solution to a generic 500 error, 404 error, or a "broken image icon", as those symptoms are far to generic to be useful.

## Could not load type 'ImageResizer.InterceptModule'

Potential causes:

1. You didn't copy ImageResizer.dll into the /bin folder (unlikely).
2. Your website has  a 'sub-site' (Application Folder) inside it. Application Folders inherit all Web.config settings from their parent sites, yet expect to have their own copies of all the dlls referenced by those settings in their own /bin folder. You can resolve this problem by (a) changing the app folder to a virtual folder, (b) adding a copy of ImageResizer.dll and plugins into the /bin folder inside that application also, or (c) using <remove /> statements in the child Web.config to cancel out the inherited <add /> statements from the parent Web.config. Option (c) will disable image resizing within the sub-application.


## Method Not Found (System.MissingMethodException)

	Server Error in '/' Application. 
	------------------------------ 
	Method not found: 'Void System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)'.
	Exception Details: System.MissingMethodException: Method not found: 'Void 
	System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)'.
	
This error occurs when you do not have .NET 2.0 Service Pack 2 applied. No other conditions cause this error. The RemapHanlder method was added in .NET 2.0 SP2, and is required by this product.
Yes, it is possible to have .NET 3, 3.5, and .NET 4 installed (and up-to-date), yet not have .NET SP2 installed. This peculiar circumstance has been verified on over 5 machines.


## The type or namespace name "ImageResizer" could not be found

When using the ImageResizer from a .NET project that is not a web project you may get the following build error:

	The type or namespace name "ImageResizer" could not be found (are you missing a using directive or assembly reference?)

This is caused by using a Client Profile version of .NET instead of the Full version. You can change this in Project Properties -> Application -> Target Framework. The ImageResizer requires the full version, as it is also designed to support ASP.NET usage and references the System.Web assembly (which is not part of the client profile).


## File not found

Potential causes:

1. You are using the .jpg.ashx syntax, and you did not register the HttpModule properly in both places of your Web.config file.
2. You are using the .jpg.ashx syntax, but you're not using a query string. You should drop the '.ashx' unless you actually want to process the file.
3. You are using ASP.NET MVC, but do not have the [MvcRoutingShim plugin](/plugins/mvcroutingshim) installed.

## Image appears original size

Potential causes: 

1. You did not register the HttpModule properly in both places of your Web.config file.
2. You are using IIS 6 (or earlier), or IIS7 Classic Pipeline, and are not using the .jpg.ashx syntax, and you have not [mapped all requests to the ASP.NET runtime](/docs/cleanurls). 
3. You are using ASP.NET MVC (and have conflicting routes), but do not have the [MvcRoutingShim plugin](/plugins/mvcroutingshim) installed.
4. You are mistyping the querystring commands. 

## File not found only on images without a querystring

Possible causes

1. You are using the .ashx syntax. This is normal - you should only add the .ashx suffix if you are also adding a querystring to tell the image resizer to do something.

2. The images are from S3 or Sql: The S3Reader and SqlReader plugins require AspNetHostingPermission to register themselves as VirtualPathProviders. If they lack permission, they register as IVirtualImageProviders instead - but then only the image resizer can find them, and the image resizer only accepts requests with a querystring that uses one of the defined commands.

3. Alternatively, you may have a URL rewriting event that is affecting the path names.

## SecurityException on GIF images when using the PrettyGifs plugin	

The PrettyGifs plugin works on any (non-customized) trust level, but in rare cases, hosting providers have disabled access to the Marshal class, which PrettyGifs depends on to perform its magic.



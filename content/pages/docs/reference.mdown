# Reference


* **maxwidth, maxheight** – fit the image within the specified bounds, preserving aspect ratio. (Most often used)

* **width, height** – force the final width and/or height to certain dimensions. Whitespace will be added if the aspect ratio is different.

* **crop=auto** – Crop the image the the size specified by width and height. Centers and minimally crops to preserve aspect ratio.
* **crop=(x1,y1,x2,y2)** – Crop the image to the specified rectangle on the source image. You can use negative coordinates to specifiy bottom-right relative locations.
* **rotate=degress** – Rotate the image.
* **bgcolor=color name | hex code (6-char).** Sets the background/whitespace color.
* **stretch=fill** – Stretches the image to width and height if both are specified. This is the only way to lose aspect ratio.
* **scale=both|upscaleonly|downscaleonly|upscalecanvas** – By default, images are never upscaled. Use &scale=both to grow an image.
* **flip=h|v|both** – Flips the image after resizing.
* **sourceFlip=h|v|both** – Flips the source image before resizing/rotation.
* **paddingWidth=px & paddingColor=color|hex** paddingColor defaults to bgcolor, which defaults to white.
* **borderWidth=px, borderColor=color|hex**

* **colors=2-255** – Control the palette size of PNG and GIF images. If omitted, PNGs will be 24-bit.
* **frame=x** – Choose which frame of an animated GIF to display.
* **page=x**– Choose which page of a multi-page TIFF document to display.
* **format=jpg|png|gif** - The output format to use
* **quality** - Jpeg compression: 0-100 100=best, 90=very good balance, 0=ugly
* **ignoreicc** - true|false. If true, the ICC profile embedded in the source image will be ignored.
* **useresizingpipeline** - Has no effect other than using the resizing pipeline to re-encode the image.

## Watermark plugin

* **watermark** - The name of a file to overlay on the current image. 

## [Image404](/plugins/image404) plugin

* **404** - The path to the fallback image, or a named preset

## [Gradient](/plugins/gradient) plugin

* **color1,color2** - 6 or 8 digit hex values specifying the start and end gradient colors. 
* **angle** - 0 is horizontal. Degrees to rotate the gradient
* **width/height** - the size of the gradient image

## PrettyGifs plugin

* **colors** - 2 to 256 (the number of colors to allow in the output image palette). For Gifs and 8-bit PNGs.

## SimpleFilters plugin

* **filter** - grayscale|sepia|alpha(value)|brightness(value) where value is a decimal between 0 and 1.

Yeah, I know, you can't combine them. Working on it.

## AdvancedFilters plugin

* **blur** - integer, blur radius
* **sharpen** - integer, sharpen radius

## DropShadow plugin

* **shadowWidth** - width of the shadow
* **shadowOffset** - (x,y) how to offset the drop shadow
* **shadowColor** - named or hex color of the shadow
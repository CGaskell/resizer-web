# HttpModule configuration

- Accepted image extensions
- Image resizing directives
- authorization events (so DiskCache can prevent access to the cache folder)
- VPP usage mode
- preheaders, postheaders events
- caching module selection
- caching module selection events

## Url Rewriting

- URL rewriting events
- FakeExtension



## Caching configuration

- Disk caching

## VirtualPathProviders

- DatabaseReader
- S3Reader

## Additional format support
- VirtualPathProvider or Extension?


# API configuration

- MaxWidth/MaxHeight (Perhaps these should be HttpModule level?)
- Extensions
- Decoders (also extensions)
- Encoders
http://blog.maartenballiauw.be/post/2009/06/09/A-view-from-the-cloud-(or-locate-your-ASPNET-MVC-views-on-Windows-Azure-Blob-Storage).aspx


# Todo

- Make Configuration class non-static. Reference Configuration.Current. Standardize on ".Current" convention.
- - Config.Current
- - Config.Current.ImageBuilderExtensions
- - Config.Current.ImageWriterExtensions
- - Config.Current.CachingSystems
- - Config.Current.GetAllPlugins()
IPlugin
- Install(Config c)
- Uninstall(Config c)
- - ImageBuilder.Current
- - ImageBuilder(extensions, ImageWriter writer)
- - ImageWriter.Current
- Remove duplicate and uneeded events from AbstractImageProcessor
- MaxWidth and MaxHeight aren't a good security measure, since paddings can be any size. Convert old behavior into a plugin, and add a new plugin to implement better security behavior.
- Make disk caching module reuseable




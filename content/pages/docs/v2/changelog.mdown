
# V2 Changelog



<h2>Releases</h2>
<ul class="normallist">
	<li>1.0 - August 6, 2008 (Initial release to the public.)</li>
	<li>1.2 - Nov 23, 2008 (<a href="../../11171_Image_Resizer_1_2_Upgrade_Notes">Upgrade Notes from 1.0 to 1.2</a>) (<a href="../../11131_Image_Resizer_v1_2_Product_Page">Original product page</a>)</li>
	<li>2.0a Jan 30, 2009 (E-mail distribution)</li>
	<li>2.0a Mar 4, 2009 (E-mail distribution)
<ul class="normallist">
	<li>Fixed: Cleanup routine can cause bottleneck on GetFiles() - fix so that Directory.GetFiles() only happens at startup and when items are added. Only affects sites with slow filesystems (or without filesystem caching), and with thousands of images.</li>
	<li>Fixed: imagecache/ is not protected when AllowURLRewriting is enabled
http://localhost/resize(40,40)/imagecache/1639776677.jpg
bypasses it.  Added protection in the HttpModule.</li>
	<li>Fixed: Potential issue in Quantizer.cs that may cause lines in GIF output.</li>
	<li> Fixed Maxwidth/maxheight not getting picked up.</li>
	<li> Fixed: Custom crop coordinates at 0 were being applied in the negative coordinate zone. Fixed so x1,y1 weren't affected, but setting x2 and y2 to 0 is bottom-right relative.</li>
	<li>Changed flip to be after all operations, and added sourceFlip to replace its behavior.</li>
	<li> Added -ignoreicc parameter and made ICC reading the default. ICC profiles are not written out - browser do not support them.</li>
</ul>
</li>
	<li>2.0b May 16, 2009  (<a href="../../11181_Image_Resizer_2_0_Upgrade_notes">Upgrade notes from 1.2 to 2.0</a>)
<ul class="normallist">
	<li>Fixed: Incorrect aspect ratio issue if both maxwidth, width, and height are specified.</li>
	<li>Fixed: UNC hosted websites are now supported.</li>
	<li>Added DisableCacheCleanup command, and made MaxCachedImages &lt; 0 behave the same as DisableCacheCleanup=true</li>
	<li>Fixed: rounding error that could cause a pixel line on the right and/or bottom sides of the image. Rare floating point rounding error in GDI native code. Added code to force rounding to be consistent.</li>
</ul>
</li>
	<li>2.0rc1 May 21, 2009 (<a href="../../11181_Image_Resizer_2_0_Upgrade_notes">Upgrade notes from 1.2 to 2.0</a>)
<ul class="normallist">
	<li>Fixed: Transparency is preserved more reliably with GIF files. Certain GIF files were losing transparency because the way the color palette was constructed.</li>
	<li>Fixed: .tif is now a supported input extension... previously only .tiff and .tff were allowed.</li>
	<li>Added WatermarkSettings.cs class for watermarking. Easy to extend for your own use.</li>
	<li>Converted ImageManager from a Static class to a normal class with a getBestInstance() static method. Allows easy plugin creation for ImageManager.</li>
	<li>Added support for ?frame=1-x and ?page=1-x. You can now select frames from GIF images and pages from TIFF files. Removed ?time</li>
	<li>Hashes are now SHA-256 instead of .NET 32-bit. They are base-16 encoded. This results in longer file names, but astronomically low chances of hash collisions.</li>
	<li>Fixed upgrade notes link in upgrade notes.txt</li>
</ul>
</li>
	<li>2.0rc2 Jun 3, 2009 (<a href="/11181_Image_Resizer_2_0_Upgrade_notes">Upgrade notes from 1.2 to 2.0</a>)
<ul class="normallist">
	<li>Fixed: Extremely rare bug where rounding causes Bitmap to be initialized with a dimension of 0, and causes a Parameter exception.
Ocurred when resizing an image to &lt; 2px in height or width (usually happens with 2x1000 size images, etc).
Added regression test for 500x2 image resized to 100px wide.</li>
	<li> Fixed: Typo (missing else) in SaveToNonSeekableStream. This method is for extensibility, and is not used by the Resizer directly.
This method is now tested and part of the Regression tests (HandlerTest.ashx).</li>
</ul>
</li>
	<li>2.1b Nov. 13, 2009 (<a href="http://nathanaeljones.com/438/version-2-1b-released/">Upgrade notes from 2.0 to 2.1b</a>)
<ul class="normallist">
	<li>Fixed: Fixed elusive performance bug in DiskCache that caused directory listings to run every image request.</li>
	<li>Added: GIF/PNG dithering support!</li>
	<li>Added: Zero-IIS-configuration installation mode! No wildcard mapping needed. Syntax: "image.jpg.axd?width=500"</li>
	<li>Fixed: All requests are forced to pass through the UrlAuthorizationModule now. Previously, any URL rewriting (like customfolders.cs) caused URL auth rules to be circumvented. This was documented behavior, but a secure solution has now been found.</li>
	<li>Added: DisableCustomQuantization setting to allow GIFs to be generated on servers where the Marshal class is prohibited.</li>
	<li>Added: PerfTests project to run benchmarks on the image resizing and encoding code.</li>
	<li>Added: ImageManager.BuildImage now accepts an HttpPostedFile instance for resizing, making upload and resize simple. Sample project included.</li>
</ul>
</li>
	<li>2.6 Nov 11, 2010 (<a href="/489">Upgrade notes from 2.1b to 2.6</a>)
<ul>
	<li>
<div id="_mcePaste">Fixed bug where a NullReference exception would occur if the Authentication module didn't process the request. All requests appear anonymous now in that situation.</div></li>
	<li>Fixed rounding bug and added regression test. New behavior is to round ALL values before performing drawing, but AFTER math is done. Was previously trimming a line of pixels off certain images.</li>
	<li>Fixed border bug where border was drawn over top of padding.</li>
	<li>Fixed threading bug with creating the web.config file. Two concurrent requests would cause an exception.</li>
	<li>Fixed bug where no URL Authorization was occuring UNLESS DisableImageURLAuthorization=TRUE in web.config (This bug did not exist in v2.1b, only in custom versions sent to customers between Mar. 19 and Nov. 11)</li>
	<li>Fixed SecurityException errors occuring on GoDaddy and in other low-trust environments: changed the Animation plugin to use static methods insead of reflection. Users of the animation plugin, contact me for an updated version.</li>
	<li></li>
	<li>Added support for splitting the image cache into subfolders, allowing scalability to millions of images:</li>
	<li>Set "ImageCacheSubfolders" to the number of required folders.</li>
	<li>Added support for resizing images from VirtualPathProviders.
Set either <em>ImageResizerUseVirtualPathProvider </em>or <em>ImageResizerUseVirtualPathProviderAsFallback </em>to true to enable the functionality. In Fallback mode, the virtual path provider is only called if no physical file exists.</li>
	<li>Added support for implementing cache-friendly database-driven image resizing using a VirtualPathProvider.</li>
	<li>Added IVirtualFileWithModified and IVirtualBitmapFile. Allows custom virtual path providers to be cache-friendly and even send bitmaps directly to the image resizer. Great for implementing new image formats.</li>
	<li>Added &amp;scale=UpscaleCanvas mode. Instead of upscaling the image, the canvas expands to the specified Width and Height.</li>
	<li>Added DisableImageURLAuthorization setting. Set to TRUE to disable additional URL authorization checking within the resizer (imagecache is still protected).</li>
	<li>Added BuildImage overloads with VirtualFile support</li>
	<li>Added static event hooks for URL rewriting on images (replaces CustomFolders.cs, although CustomFolders.cs still works).</li>
	<li>CustomFolders.cs will be removed in the next major revision.</li>
	<li>Added the ability to specify custom extension/ImageFormat mappings, in case your jpegs are named .cow or .pig for some strange reason.</li>
	<li>Added TranslatePoint methods to allow simulation of a resize (useful for image map generation).</li>
	<li>Added Size GetFinalSize() methods to ImageManager.cs for determining the resulting size of an image.</li>
	<li>Performance boost: modified DiskUtil.UpdateCachedVersionIfNeeded to use 'cachedFile' instead of 'sourceFile' as lock/sync key.</li>
</ul>
</li>
</ul>